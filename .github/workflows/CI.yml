name: CI

env:
  DEBUG: 'napi:*'
  APP_NAME: 'node-keyring'
  MACOSX_DEPLOYMENT_TARGET: '10.15'

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: 'x86_64-apple-darwin'
            setup: |
              brew install nasm
              rustup target add aarch64-apple-darwin
            build: |
              rustc --print target-cpus
              yarn build-release
#              strip -x index.node
#              strip -x node-keyring.darwin-x64.node
            downloadTarget: ''
          - host: windows-latest
            build: yarn build-release
            target: 'x86_64-pc-windows-msvc'
            downloadTarget: ''
          - host: ubuntu-latest
            target: 'x86_64-unknown-linux-gnu'
            downloadTarget: ''
#            docker: |
#              docker pull ghcr.io/brooooooklyn/canvas/debian-builder:buster
#              docker tag ghcr.io/brooooooklyn/canvas/debian-builder:buster builder
#            build: |
#              docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/canvas -w /canvas builder sh -c "yarn build-release && strip skia.linux-x64-gnu.node"
#          - host: macos-latest
#            downloadTarget: 'aarch64-apple-darwin'
#            target: 'aarch64-apple-darwin'
#            build: |
#              sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
#              export CC=$(xcrun -f clang);
#              export CXX=$(xcrun -f clang++);
#              SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
#              export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
#              yarn build-release --target aarch64-apple-darwin
#              strip -x index.node
##              strip -x node-keyring.darwin-arm64.node

    name: stable - ${{ matrix.settings.target }} - node@16
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Set env
        if: matrix.settings.host == 'windows-latest'
        run: echo "C:\\msys64\\mingw64\\bin" >> $GITHUB_PATH
        shell: bash

      - name: Setup nasm
        uses: ilammy/setup-nasm@v1
        if: matrix.settings.host == 'windows-latest'

      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          target: ${{ matrix.settings.target }}

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.settings.target }}-cargo-cache

      - name: Cache yarn
        uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: ${{ matrix.settings.target }}-yarn-cache-node-16

      - name: Install dependencies
        run: yarn install --immutable --mode=skip-build

#      - name: Pull latest image
#        run: ${{ matrix.settings.docker }}
#        env:
#          DOCKER_REGISTRY_URL: ghcr.io
#        if: ${{ matrix.settings.docker }}

      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}

#      - name: Download skia binary
#        run: node ./scripts/release-skia-binary.js --download --target=${{ matrix.settings.downloadTarget }}

      - name: 'Build'
        run: ${{ matrix.settings.build }}

      - name: 'Rename index.node'
        run: mv index.node ${{ env.APP_NAME }}.${{ matrix.settings.target }}.node

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.APP_NAME }}.*.node
